version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: dcoder
      POSTGRES_PASSWORD: localdev
      POSTGRES_DB: dcoder_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dcoder"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  platform-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://dcoder:localdev@postgres:5432/dcoder_platform
      REDIS_URL: redis://redis:6379/0

      # Authentication
      JWT_SECRET_KEY: local-development-secret-key-change-in-production
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

      # Environment
      ENVIRONMENT: development
      DEBUG: "true"
      LOG_LEVEL: debug

      # Service Configuration
      SERVICE_NAME: platform-api
      SERVICE_VERSION: 1.0.0

      # Feature Flags
      FLAGSMITH_URL: http://flagsmith:8000
      FLAGSMITH_ENVIRONMENT_KEY: development

      # Observability
      ENABLE_METRICS: "true"
      ENABLE_TRACING: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4317
    ports:
      - "8082:8082"
    volumes:
      - ./src:/app/src
      - ../shared/python:/shared/python
    command: uvicorn src.main:app --host 0.0.0.0 --port 8082 --reload

volumes:
  postgres-data:
  redis-data: